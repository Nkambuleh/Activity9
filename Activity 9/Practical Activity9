{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "86d20032-2889-4aa9-a24a-ddf91233c632",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Sorted array using Bubble Sort: [3, 7, 10, 11, 13, 26, 43]\n"
     ]
    }
   ],
   "source": [
    "def bubble_sort(arr):\n",
    "    n = len(arr)\n",
    "    for i in range(n):\n",
    "        # Last i elements are already in place\n",
    "        for j in range(0, n - i - 1):\n",
    "            # Traverse the array from 0 to n-i-1\n",
    "            # Swap if the element found is greater\n",
    "            # than the next element\n",
    "            if arr[j] > arr[j + 1]:\n",
    "                arr[j], arr[j + 1] = arr[j + 1], arr[j]\n",
    "\n",
    "#  elements\n",
    "elements = [10, 7, 26, 43, 3, 13, 11]\n",
    "\n",
    "# Sorting using Bubble Sort\n",
    "bubble_sort(elements)\n",
    "\n",
    "# Print the sorted elements\n",
    "print(\"Sorted array using Bubble Sort:\", elements)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "37f2791c-48d7-4596-a1fd-e37501a556c8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Sorted array using Insertion Sort: [3, 7, 10, 11, 13, 26, 43]\n"
     ]
    }
   ],
   "source": [
    "def insertion_sort(arr):\n",
    "    for i in range(1, len(arr)):\n",
    "        key = arr[i]\n",
    "        # Move elements of arr[0..i-1], that are\n",
    "        # greater than key, to one position ahead\n",
    "        # of their current position\n",
    "        j = i - 1\n",
    "        while j >= 0 and key < arr[j]:\n",
    "            arr[j + 1] = arr[j]\n",
    "            j -= 1\n",
    "        arr[j + 1] = key\n",
    "\n",
    "#  elements\n",
    "elements = [10, 7, 26, 43, 3, 13, 11]\n",
    "\n",
    "# Sorting using Insertion Sort\n",
    "insertion_sort(elements)\n",
    "\n",
    "# Print the sorted elements\n",
    "print(\"Sorted array using Insertion Sort:\", elements)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "806f574c-44fe-4521-b68a-8374495e3879",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Element 26 is not present in the array\n"
     ]
    }
   ],
   "source": [
    "\n",
    "def binary_search(arr, target):\n",
    "    left = 0\n",
    "    right = len(arr) - 1\n",
    "\n",
    "    while left <= right:\n",
    "        mid = left + (right-left) // 2\n",
    "\n",
    "        # Check if target is present at mid\n",
    "        if arr[mid] == target:\n",
    "            return mid\n",
    "        # If target is greater, ignore left half\n",
    "        elif arr[mid] < target:\n",
    "            left = mid + 1\n",
    "        # If target is smaller, ignore right half\n",
    "        else:\n",
    "            right = mid - 1\n",
    "\n",
    "    # If we reach here, the element was not present\n",
    "    return -1\n",
    "\n",
    "# Given array\n",
    "arr = [7, 11, 10, 43, 26, 3, 13]\n",
    "\n",
    "# Target element to search\n",
    "target = 26\n",
    "\n",
    "# Perform binary search\n",
    "result = binary_search(arr, target)\n",
    "\n",
    "# Check if element is found\n",
    "if result != -1:\n",
    "    print(\"Element\", target, \"is present at index\", result)\n",
    "else:\n",
    "    print(\"Element\", target, \"is not present in the array\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "466443ce-e84f-441d-8ad5-e3f85f2dc96c",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
